{"task": "Write one or more functions in the python language, with the main function called project_tasks_puzzle() where the input is a starting array, and the needed output is the final ending array after the following project schedule process, so, def project_tasks_puzzle([array]): is the main function and the output is one array of values. This is a sequential turn-based project where participants perform tasks changing values in arrays. Feeding into the final ending array of results there is a starting array (the one input parameter) and each participant has workspace array. There are 1 roles or participants. Each participant has 1 task. This is the project operation schedule: Alice is going to perform addition on the data from 'start_project_array' and store the result in the 'end_result_project_array' array workspace inserted at the 0 index (inserted, not overwriting any values). The sum operation will be performed on the slice from index 1 to (but not including) index 2. ", "function_name": "project_tasks_puzzle", "input_parameters": ["one array of values"], "output_description": "The final array of project results", "test_cases": [{"input": [3, 0, 9], "expected_output": [0]}, {"input": [6, 3, 1], "expected_output": [3]}, {"input": [9, 6, 1], "expected_output": [6]}, {"input": [2, 9, 9], "expected_output": [9]}, {"input": [4, 2, 4], "expected_output": [2]}]}
{"task": "Write one or more functions in the python language, with the main function called project_tasks_puzzle() where the input is a starting array, and the needed output is the final ending array after the following project schedule process, so, def project_tasks_puzzle([array]): is the main function and the output is one array of values. This is a sequential turn-based project where participants perform tasks changing values in arrays. Feeding into the final ending array of results there is a starting array (the one input parameter) and each participant has workspace array. There are 1 roles or participants. Each participant has 2 tasks. This is the project operation schedule: Alice is going to perform multiplication on the data from 'start_project_array' and store the result in the 'end_result_project_array' array workspace inserted at the 0 index (inserted, not overwriting any values). The product operation will be performed on the slice from index 0 to (but not including) index 1. Alice is going to perform reverse-sort on the data from 'start_project_array' and store the result in the 'end_result_project_array' array workspace inserted at the 0 index (inserted, not overwriting any values). The reverse_sort operation will be performed on the slice from index 0 to (but not including) index 3. ", "function_name": "project_tasks_puzzle", "input_parameters": ["one array of values"], "output_description": "The final array of project results", "test_cases": [{"input": [2, 3, 8], "expected_output": [8, 3, 2, 2]}, {"input": [3, 4, 6], "expected_output": [6, 4, 3, 3]}, {"input": [9, 1, 9], "expected_output": [9, 9, 1, 9]}, {"input": [7, 9, 9], "expected_output": [9, 9, 7, 7]}, {"input": [8, 2, 9], "expected_output": [9, 8, 2, 8]}]}
{"task": "Write one or more functions in the python language, with the main function called project_tasks_puzzle() where the input is a starting array, and the needed output is the final ending array after the following project schedule process, so, def project_tasks_puzzle([array]): is the main function and the output is one array of values. This is a sequential turn-based project where participants perform tasks changing values in arrays. Feeding into the final ending array of results there is a starting array (the one input parameter) and each participant has workspace array. There are 2 roles or participants. Each participant has 1 task. This is the project operation schedule: Alice is going to perform reverse-sort on the data from 'start_project_array' and store the result in the 'end_result_project_array' array workspace inserted at the 0 index (inserted, not overwriting any values). The reverse_sort operation will be performed on the slice from index 0 to (but not including) index 3. Bob is going to perform multiplication on the data from 'start_project_array' and store the result in the 'end_result_project_array' array workspace inserted at the 1 index (inserted, not overwriting any values). The product operation will be performed on the slice from index 0 to (but not including) index 3. ", "function_name": "project_tasks_puzzle", "input_parameters": ["one array of values"], "output_description": "The final array of project results", "test_cases": [{"input": [2, 5, 4], "expected_output": [5, 8, 4, 2]}, {"input": [0, 0, 3], "expected_output": [3, 0, 0, 0]}, {"input": [0, 5, 8], "expected_output": [8, 0, 5, 0]}, {"input": [4, 0, 8], "expected_output": [8, 32, 4, 0]}, {"input": [4, 2, 6], "expected_output": [6, 24, 4, 2]}]}
